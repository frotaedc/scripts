após entrar na pasta do projeto e executar npm install, se der erro execute

npm install -g --unsafe-perm=true --allow-root

npm cache clean --force

rm -rf node_modules

npm cache clean --force
delete node_modules folder
delete package-lock.json file
npm install

npm link webpack

npm i -g webpack-cli


##################################################################################################
# VARIÁVEIS DE AMBIENTE

###-tns-completion-start-###
if [ -f /home/frota/.tnsrc ]; then 
    source /home/frota/.tnsrc 
fi
###-tns-completion-end-###

export JAVA_HOME="/usr/lib/jvm/jdk-8/"
export ANDROID_HOME="/usr/local/android/sdk/"
#export ANDROID_HOME="/opt/android-sdk/"
export PATH="${PATH}:${JAVA_HOME}bin/"
CLASSPATH=$JAVA_HOME/lib/tools.jar
export CLASSPATH=.:$CLASSPATH

export PATH="${PATH}:${ANDROID_HOME}tools/:${ANDROID_HOME}tools/bin/:${ANDROID_HOME}platform-tools/:${ANDROID_HOME}emulator/"

export JAVA_HOME=$(update-alternatives --query javac | sed -n -e 's/Best: *\(.*\)\/bin\/javac/\1/p')



# toda pasta que for criada tanto do android sdk, android studio, java, inclusive a pasta do projeto quando iniciar deve dar o chmod -R 777 .

$ANDROID_HOME/tools/bin/sdkmanager "build-tools;25.0.2"


# após criar o projeto

chmod -R 777 .
tns migrate
tns update
tns run android

# adicione o comando abaixo no webpack.config.js do projeto

HTMLElement: function() {
 return false;
},


# ficando assim:

new webpack.DefinePlugin({
  'global.TNS_WEBPACK': 'true',
  TNS_ENV: JSON.stringify(mode),
  process: 'global.process',
  HTMLElement: function() {
    return false;
  },
}),
